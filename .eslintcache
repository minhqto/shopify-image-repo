[{"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/index.js":"1","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/App.js":"2","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/reportWebVitals.js":"3","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/utils/Router.js":"4","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Navbar.js":"5","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/AddImages.js":"6","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Image.js":"7","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Images.js":"8","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/config/config.js":"9","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Login.js":"10","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Signup.js":"11","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/context/index.js":"12"},{"size":593,"mtime":1610784445683,"results":"13","hashOfConfig":"14"},{"size":909,"mtime":1611083775337,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1071,"mtime":1610845454411,"results":"17","hashOfConfig":"14"},{"size":2341,"mtime":1611083473359,"results":"18","hashOfConfig":"14"},{"size":3319,"mtime":1610993303370,"results":"19","hashOfConfig":"14"},{"size":1054,"mtime":1611015892903,"results":"20","hashOfConfig":"14"},{"size":2603,"mtime":1611015892905,"results":"21","hashOfConfig":"14"},{"size":106,"mtime":1610853066075,"results":"22","hashOfConfig":"14"},{"size":4391,"mtime":1611097935963,"results":"23","hashOfConfig":"14"},{"size":5546,"mtime":1610830560422,"results":"24","hashOfConfig":"14"},{"size":124,"mtime":1610822100608,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"d0af8g",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/index.js",[],["53","54"],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/App.js",["55"],"import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { PublicRouter, PrivateRouter } from \"./utils/Router\";\nimport { AppProvider } from \"../src/context\";\nimport { useState } from \"react\";\nfunction App() {\n  const [loginTime, setLoginTime] = useState(new Date().getTime());\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [imagesUploaded, setImagesUploaded] = useState(false);\n  const [allUploadedImages, setAllUploadedImages] = useState([]);\n\n  return (\n    <AppProvider\n      value={{\n        imagesUploaded,\n        setImagesUploaded,\n        allUploadedImages,\n        setAllUploadedImages,\n        isLoggedIn,\n        setIsLoggedIn,\n        setLoginTime,\n      }}\n    >\n      {isLoggedIn ? (\n        <div>\n          <PrivateRouter />\n        </div>\n      ) : (\n        <div>\n          <PublicRouter />\n        </div>\n      )}\n    </AppProvider>\n  );\n}\n\nexport default App;\n","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/reportWebVitals.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/utils/Router.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Navbar.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/AddImages.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Image.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Images.js",["56"],"import React, { useEffect, useContext } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardText,\n  CardImg,\n  Button,\n  Alert,\n} from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppContext } from \"../context\";\nimport axios from \"axios\";\nimport config from \"../config/config\";\nimport ImageRepoNavbar from \"./Navbar\";\n\nconst Images = () => {\n  const { allUploadedImages, setAllUploadedImages } = useContext(AppContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (allUploadedImages.length === 0) {\n      axios(`${config.apiUrl}/images`, { withCredentials: true }).then(\n        (result) => {\n          console.log(\"images reloaded!\");\n          let allImages = [];\n          let imgID = 1;\n          result.data.forEach((image) => {\n            let tempImg = { id: imgID, url: image.url, name: image.name };\n            imgID++;\n            allImages.push(tempImg);\n          });\n          setAllUploadedImages(allImages);\n        }\n      );\n    }\n  }, []);\n\n  const handleCardClick = (imgName) => {\n    history.push(`/image/${imgName}`);\n  };\n\n  const handleDelete = (imgName) => {\n    axios\n      .delete(`${config.apiUrl}/image/${imgName}`, { withCredentials: true })\n      .then((response) => {\n        let updatedImages = allUploadedImages.filter(\n          (img) => img.name !== imgName\n        );\n        setAllUploadedImages(updatedImages);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Container>\n      <ImageRepoNavbar />\n      <Row>\n        <Col xs=\"10\">\n          <Alert color=\"light\">Click on images to see larger version!</Alert>\n        </Col>\n      </Row>\n      <Row>\n        {allUploadedImages.length > 0 ? (\n          allUploadedImages.map((img, index) => (\n            <Col xs=\"3\" key={index}>\n              <Card body outline>\n                <CardImg\n                  top\n                  width=\"100%\"\n                  src={img.url}\n                  onClick={() => handleCardClick(img.name)}\n                />\n                <CardText>{img.name}</CardText>\n\n                <Button\n                  outline\n                  onClick={() => {\n                    handleDelete(img.name);\n                  }}\n                >\n                  Delete\n                </Button>\n              </Card>\n            </Col>\n          ))\n        ) : (\n          <div>\n            <Alert color=\"info\">\n              No images here :( Click \"Add Images\" to start adding some\n            </Alert>\n          </div>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Images;\n","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/config/config.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Login.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Signup.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/context/index.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":38,"column":6,"nodeType":"67","endLine":38,"endColumn":8,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'loginTime' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allUploadedImages.length' and 'setAllUploadedImages'. Either include them or remove the dependency array.","ArrayExpression",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [allUploadedImages.length, setAllUploadedImages]",{"range":"74","text":"75"},[1007,1009],"[allUploadedImages.length, setAllUploadedImages]"]