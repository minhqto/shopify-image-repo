[{"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/index.js":"1","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/App.js":"2","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/reportWebVitals.js":"3","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Navbar.js":"4","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/utils/Router.js":"5","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Images.js":"6","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/AddImages.js":"7","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Image.js":"8","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/config/config.js":"9"},{"size":593,"mtime":1609008270812,"results":"10","hashOfConfig":"11"},{"size":272,"mtime":1609196748153,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":943,"mtime":1609995477561,"results":"14","hashOfConfig":"11"},{"size":545,"mtime":1609997237930,"results":"15","hashOfConfig":"11"},{"size":2107,"mtime":1610164906205,"results":"16","hashOfConfig":"11"},{"size":1513,"mtime":1610153090558,"results":"17","hashOfConfig":"11"},{"size":955,"mtime":1610157958625,"results":"18","hashOfConfig":"11"},{"size":83,"mtime":1610157563612,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1cosmi6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/index.js",[],["42","43"],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/App.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/reportWebVitals.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Navbar.js",["44","45","46","47","48"],"import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from \"reactstrap\";\n\nconst ImageRepoNavbar = (props) => {\n  const [selected, setSelected] = useState(false);\n  const toggle = () => setSelected(!selected);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Imagify</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse selected={selected} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink href=\"/images\">All Images</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/addImages\">Add Images</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n      <br></br>\n    </div>\n  );\n};\n\nexport default ImageRepoNavbar;\n","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/utils/Router.js",["49","50"],"import React, { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Images from \"../components/Images\";\nimport AddImages from \"../components/AddImages\";\nimport Image from \"../components/Image\";\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/images\" render={() => <Images />}></Route>\n      <Route exact path=\"/addImages\" render={() => <AddImages />}></Route>\n      <Route exact path=\"/image/:id\" render={() => <Image />}></Route>\n    </Switch>\n  );\n};\n\nexport default Router;\n","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Images.js",["51","52"],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/AddImages.js",[],"/Users/minhto/Documents/Projects/shopify-image-repo-react/src/components/Image.js",["53","54","55"],"import { React, useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardImg,\n  CardText,\n  Button,\n} from \"reactstrap\";\nimport { useParams } from \"react-router\";\nimport axios from \"axios\";\nimport config from \"../config/config\";\n\nconst Image = () => {\n  let { id } = useParams();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  useEffect(() => {\n    axios.get(`${config.apiUrl}/image/${id}`).then((response) => {\n      if (response.status == 200) {\n        setImageUrl(response.data);\n        console.log(response);\n      }\n    });\n  }, []);\n\n  return (\n    <Container>\n      <Row>\n        <Col xs=\"3\">\n          {imageUrl ? (\n            <Card>\n              <CardImg top width=\"100%\" alt=\"Card image cap\" src={imageUrl} />\n              <CardText>{}</CardText>\n            </Card>\n          ) : (\n            <p>Image not found!</p>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Image;\n","/Users/minhto/Documents/Projects/shopify-image-repo-react/src/config/config.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":10,"column":3,"nodeType":"62","messageId":"63","endLine":10,"endColumn":23},{"ruleId":"60","severity":1,"message":"64","line":11,"column":3,"nodeType":"62","messageId":"63","endLine":11,"endColumn":17},{"ruleId":"60","severity":1,"message":"65","line":12,"column":3,"nodeType":"62","messageId":"63","endLine":12,"endColumn":15},{"ruleId":"60","severity":1,"message":"66","line":13,"column":3,"nodeType":"62","messageId":"63","endLine":13,"endColumn":15},{"ruleId":"60","severity":1,"message":"67","line":14,"column":3,"nodeType":"62","messageId":"63","endLine":14,"endColumn":13},{"ruleId":"60","severity":1,"message":"68","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":27},{"ruleId":"60","severity":1,"message":"69","line":2,"column":25,"nodeType":"62","messageId":"63","endLine":2,"endColumn":33},{"ruleId":"70","severity":1,"message":"71","line":30,"column":6,"nodeType":"72","endLine":30,"endColumn":8,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":40,"column":64,"nodeType":"76","messageId":"77","endLine":40,"endColumn":66},{"ruleId":"60","severity":1,"message":"78","line":9,"column":3,"nodeType":"62","messageId":"63","endLine":9,"endColumn":9},{"ruleId":"74","severity":1,"message":"79","line":20,"column":27,"nodeType":"76","messageId":"77","endLine":20,"endColumn":29},{"ruleId":"70","severity":1,"message":"80","line":25,"column":6,"nodeType":"72","endLine":25,"endColumn":8,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'UncontrolledDropdown' is defined but never used.","Identifier","unusedVar","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.","'useContext' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imgID'. Either include it or remove the dependency array. You can also do a functional update 'setImgID(i => ...)' if you only need 'imgID' in the 'setImgID' call.","ArrayExpression",["84"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [imgID]",{"range":"90","text":"91"},"Update the dependencies array to be: [id]",{"range":"92","text":"93"},[757,759],"[imgID]",[568,570],"[id]"]